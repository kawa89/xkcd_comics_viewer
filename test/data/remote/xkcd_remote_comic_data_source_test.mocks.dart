// Mocks generated by Mockito 5.0.4 from annotations
// in xkcd_comics_viewer/test/data/remote/xkcd_remote_comic_data_source_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:xkcd_comics_viewer/data/remote/model/xkcd_comic.dart' as _i2;
import 'package:xkcd_comics_viewer/data/remote/rest_client/xkcd_rest_client.dart' as _i4;
import 'package:xkcd_comics_viewer/data/remote/xkcd_comic_to_comic_mapper.dart' as _i6;
import 'package:xkcd_comics_viewer/domain/entity/comic.dart' as _i3;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeXkcdComic extends _i1.Fake implements _i2.XkcdComic {}

class _FakeComic extends _i1.Fake implements _i3.Comic {}

/// A class which mocks [XkcdRestClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockXkcdRestClient extends _i1.Mock implements _i4.XkcdRestClient {
  MockXkcdRestClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.XkcdComic> getLatestComic() =>
      (super.noSuchMethod(Invocation.method(#getLatestComic, []), returnValue: Future<_i2.XkcdComic>.value(_FakeXkcdComic())) as _i5.Future<_i2.XkcdComic>);

  @override
  _i5.Future<_i2.XkcdComic> getComic(int? id) =>
      (super.noSuchMethod(Invocation.method(#getComic, [id]), returnValue: Future<_i2.XkcdComic>.value(_FakeXkcdComic())) as _i5.Future<_i2.XkcdComic>);
}

/// A class which mocks [XkcdComicToComicMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockXkcdComicToComicMapper extends _i1.Mock implements _i6.XkcdComicToComicMapper {
  MockXkcdComicToComicMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Comic map(_i2.XkcdComic? xkcdComic) => (super.noSuchMethod(Invocation.method(#map, [xkcdComic]), returnValue: _FakeComic()) as _i3.Comic);
}

/// A class which mocks [XkcdComic].
///
/// See the documentation for Mockito's code generation for more information.
class MockXkcdComic extends _i1.Mock implements _i2.XkcdComic {
  MockXkcdComic() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get num => (super.noSuchMethod(Invocation.getter(#num), returnValue: 0) as int);

  @override
  set num(int? _num) => super.noSuchMethod(Invocation.setter(#num, _num), returnValueForMissingStub: null);

  @override
  String get title => (super.noSuchMethod(Invocation.getter(#title), returnValue: '') as String);

  @override
  set title(String? _title) => super.noSuchMethod(Invocation.setter(#title, _title), returnValueForMissingStub: null);

  @override
  String get img => (super.noSuchMethod(Invocation.getter(#img), returnValue: '') as String);

  @override
  set img(String? _img) => super.noSuchMethod(Invocation.setter(#img, _img), returnValueForMissingStub: null);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(Invocation.method(#toJson, []), returnValue: <String, dynamic>{}) as Map<String, dynamic>);

  @override
  String toString() => (super.noSuchMethod(Invocation.method(#toString, []), returnValue: '') as String);
}

/// A class which mocks [Comic].
///
/// See the documentation for Mockito's code generation for more information.
class MockComic extends _i1.Mock implements _i3.Comic {
  MockComic() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id => (super.noSuchMethod(Invocation.getter(#id), returnValue: 0) as int);

  @override
  set id(int? _id) => super.noSuchMethod(Invocation.setter(#id, _id), returnValueForMissingStub: null);

  @override
  String get title => (super.noSuchMethod(Invocation.getter(#title), returnValue: '') as String);

  @override
  set title(String? _title) => super.noSuchMethod(Invocation.setter(#title, _title), returnValueForMissingStub: null);

  @override
  String get imageUrl => (super.noSuchMethod(Invocation.getter(#imageUrl), returnValue: '') as String);

  @override
  set imageUrl(String? _imageUrl) => super.noSuchMethod(Invocation.setter(#imageUrl, _imageUrl), returnValueForMissingStub: null);

  @override
  int get hashCode => (super.noSuchMethod(Invocation.getter(#hashCode), returnValue: 0) as int);

  @override
  _i3.Comic copyWith({int? id, String? title, String? imageUrl}) =>
      (super.noSuchMethod(Invocation.method(#copyWith, [], {#id: id, #title: title, #imageUrl: imageUrl}), returnValue: _FakeComic()) as _i3.Comic);

  @override
  String toString() => (super.noSuchMethod(Invocation.method(#toString, []), returnValue: '') as String);

  @override
  bool operator ==(Object? other) => (super.noSuchMethod(Invocation.method(#==, [other]), returnValue: false) as bool);

  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(Invocation.method(#toMap, []), returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}
